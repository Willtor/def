// Unit test for the modulus operator.

decl printf (*char, ...) -> i32;

export
def main () -> i32
begin
    var a_i, b_i i32;
    var a_u, b_u u32;

    // Signed modulo.
    a_i = 7; b_i = 42;
    printf("signed %d %% %d = %d\n", a_i, b_i, a_i % b_i);

    a_i = 7; b_i = -42;
    printf("signed %d %% %d = %d\n", a_i, b_i, a_i % b_i);

    a_i = -42; b_i = 4;
    printf("signed %d %% %d = %d\n", a_i, b_i, a_i % b_i);

    a_i = 0x7FFFFFFF; b_i = 2;
    printf("signed %d %% %d = %d\n", a_i, b_i, a_i % b_i);

    printf("signed const %d %% %d = %d\n", 7, 42, 7 % 42);

    printf("signed const %d %% %d = %d\n", 7, -42, 7 % -42);

    printf("signed const %d %% %d = %d\n", 0x7FFFFFFF, 3, 0x7FFFFFFF % 3);

    // Unsigned modulo.
    a_u = 7; b_u = 42;
    printf("unsigned %u %% %u = %u\n", a_u, b_u, a_u % b_u);

    a_u = 7; b_u = -42;
    printf("unsigned %u %% %u = %u\n", a_u, b_u, a_u % b_u);

    a_u = -42; b_u = 4;
    printf("unsigned %u %% %u = %u\n", a_u, b_u, a_u % b_u);

    a_u = 0x7FFFFFFF; b_u = 3;
    printf("unsigned %u %% %u = %u\n", a_u, b_u, a_u % b_u);

    a_u = 0xFFFFFFFF; b_u = 3;
    printf("unsigned %u %% %u = %u\n", a_u, b_u, a_u % b_u);

    printf("unsigned const %u %% %u = %u\n", 7, 42, 7 % 42);

    printf("unsigned const %u %% %u = %u\n", 7, -42, 7 % -42);

    printf("unsigned const %u %% %u = %u\n", 0xFFFFFFFFU32, 4, 0xFFFFFFFFU32 % 4);

    // Done.
    printf("done.\n");

    return 0;
end
